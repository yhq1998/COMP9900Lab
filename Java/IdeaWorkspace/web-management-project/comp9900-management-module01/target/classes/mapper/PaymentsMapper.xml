<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unsw.mapper.PaymentsMapper">
  <resultMap id="BaseResultMap" type="com.unsw.pojo.Payments">
    <!--@mbg.generated-->
    <!--@Table payments-->
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="amount" jdbcType="NUMERIC" property="amount" />
    <result column="payment_method" jdbcType="OTHER" property="paymentMethod" />
    <result column="status" jdbcType="OTHER" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, order_id, amount, payment_method, status, created_at
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from payments
    where id = #{id,jdbcType=OTHER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    <!--@mbg.generated-->
    delete from payments
    where id = #{id,jdbcType=OTHER}
  </delete>
  
  <insert id="insert" parameterType="com.unsw.pojo.Payments">
    <!--@mbg.generated-->
    insert into payments (id, order_id, amount, 
      payment_method, status, created_at
      )
    values (#{id,jdbcType=OTHER}, #{orderId,jdbcType=INTEGER}, #{amount,jdbcType=NUMERIC}, 
      #{paymentMethod,jdbcType=OTHER}, #{status,jdbcType=OTHER}, #{createdAt,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.unsw.pojo.Payments">
    <!--@mbg.generated-->
    insert into payments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=NUMERIC},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=OTHER},
      </if>
      <if test="status != null">
        #{status,jdbcType=OTHER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.unsw.pojo.Payments">
    <!--@mbg.generated-->
    update payments
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=NUMERIC},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=OTHER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=OTHER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.unsw.pojo.Payments">
    <!--@mbg.generated-->
    update payments
    set order_id = #{orderId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=NUMERIC},
      payment_method = #{paymentMethod,jdbcType=OTHER},
      status = #{status,jdbcType=OTHER},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  
  <!-- 自定义SQL语句 -->
  
  <!-- 分页查询支付记录 -->
  <select id="findByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payments
    <where>
      <if test="orderId != null">
        and order_id = #{orderId}
      </if>
      <if test="status != null and status != ''">
        and status = #{status}
      </if>
      <if test="paymentMethod != null and paymentMethod != ''">
        and payment_method = #{paymentMethod}
      </if>
      <if test="startDate != null">
        and created_at &gt;= #{startDate}
      </if>
      <if test="endDate != null">
        and created_at &lt;= #{endDate}
      </if>
    </where>
    order by created_at desc
    <if test="page != null and size != null">
      limit #{size} offset #{page} * #{size} - #{size}
    </if>
  </select>
  
  <!-- 统计支付记录总数 -->
  <select id="countPayments" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*)
    from payments
    <where>
      <if test="orderId != null">
        and order_id = #{orderId}
      </if>
      <if test="status != null and status != ''">
        and status = #{status}
      </if>
      <if test="paymentMethod != null and paymentMethod != ''">
        and payment_method = #{paymentMethod}
      </if>
      <if test="startDate != null">
        and created_at &gt;= #{startDate}
      </if>
      <if test="endDate != null">
        and created_at &lt;= #{endDate}
      </if>
    </where>
  </select>
  
  <!-- 根据订单ID查询支付记录 -->
  <select id="findByOrderId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payments
    where order_id = #{orderId}
    order by created_at desc
  </select>
  
  <!-- 根据支付状态查询支付记录 -->
  <select id="findByStatus" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payments
    where status = #{status}
    order by created_at desc
  </select>
  
  <!-- 根据支付方式查询支付记录 -->
  <select id="findByPaymentMethod" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payments
    where payment_method = #{paymentMethod}
    order by created_at desc
  </select>
  
  <!-- 更新支付状态 -->
  <update id="updateStatus" parameterType="java.util.Map">
    update payments
    set status = #{status}
    where id = #{id}
  </update>
  
  <!-- 更新退款信息 -->
  <update id="updateRefundInfo" parameterType="java.util.Map">
    update payments
    set status = #{status},
        refund_amount = #{refundAmount},
        refund_reason = #{refundReason}
    where id = #{id}
  </update>
</mapper> 